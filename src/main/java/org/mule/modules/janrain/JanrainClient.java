/**
 * (c) 2003-2012 MuleSoft, Inc. This software is protected under international
 * copyright law. All use of this software is subject to MuleSoft's Master
 * Subscription Agreement (or other Terms of Service) separately entered
 * into between you and MuleSoft. If such an agreement is not in
 * place, you may not use the software.
 **/

/**
 * This file was automatically generated by the Mule Development Kit
 */

package org.mule.modules.janrain;

import java.util.Map;

import org.mule.modules.janrain.responses.Backplane;
import org.mule.modules.janrain.responses.Broadcast;
import org.mule.modules.janrain.responses.Direct;
import org.mule.modules.janrain.responses.Identifiers;
import org.mule.modules.janrain.responses.Plugin;
import org.mule.modules.janrain.responses.ShareProviders;
import org.mule.modules.janrain.responses.UserInfo;
import org.mule.modules.janrain.responses.Contacts;
import org.mule.modules.janrain.responses.AvailableProviders;
import org.mule.modules.janrain.responses.WidgetProviders;

public interface JanrainClient {

    public UserInfo authInfo(String token, Boolean extended, String tokenURL);
    
    public boolean addOrUpdateAccessToken(String token, String identifier);
    
    public Map<String, String> analyticsAccess(String start, String end);
    
    public Map<String, String> getAppSettings();
    
    public AvailableProviders getAvailableProviders();
    
    public Contacts getContacts(String identifier, String contactType, Boolean existingUser);
    
    public UserInfo getUserData(String identifier, Boolean extended);
    
    public WidgetProviders providers();
    
    public boolean setAppSettings(String privacyPolicy, String favicon, String domainRedirect, Boolean postToTokenUrl, Boolean oneTimeUseTokens, Boolean googleProfileUrl);
    
    public boolean setAuthProviders(String providers, String deviceType);
    
    public String allMappings();
    
    public boolean map(String identifier, String primaryKey, Boolean overwrite);
    
    public Identifiers mappings(String primaryKey);
    
    public boolean unmap(String identifier, Boolean allIdentifiers, String primaryKey, Boolean unlink);
    
    public Broadcast broadcast(String identifier, String deviceToken, String title, String url, String source, String message, String description, String image, String media, String actionLink, String objectId);
    
    public Direct direct(String identifier, String deviceToken, String title, String url, String recipients, String source, String message, String description, String image, String media, String actionLink, String recipientUrls);
    
    public String getShareCount(String url, String callback);
    
    public ShareProviders getShareProviders();
    
    public boolean setShareProviders(String share, String email);
    
    public boolean addDomainPatterns(String domains);
    
    public Backplane getBackplaneProperties();
    
    public String getDomainPatterns();
    
    public Plugin lookupRp(String pluginName, String pluginVersion);
    
    public boolean setBackplaneProperties(String server, String bus, String version, Boolean remove, String username, String password);
    
    public boolean setDomainPatterns(String domains);
    
}